'*************
'*VERSION 3.0*
'*************

' Brian Kasper, Oregon Department of Environmental Quality
' Last updated (04/17/00 and 4/18/01)

' Based on "AutoUnion" written by:
' http://www.geocities.com/SiliconValley/Haven/2295/
' mailto:andrew_williamson@highland.gov.uk

' To use this script, attach it to a view button/menu bar

''''''''''''''''''''
'av.finddialog("unionize").close

ch = msgbox.yesno("Have you used the LOOSE ENDS tool to eliminate overshoots and undershoots???","Warning!",true)
if (ch=false) then
  msgbox.info("Use the Show Loose Ends option of TTools to clean you polyline BEFORE unionizing.","In order to proceed...")
  exit
end 

theView = av.GetActiveDoc
theTheme = theView.GetActiveThemes.get(0)
'theview.SetEditableTheme(thetheme)


atheme = theview.getactivethemes
theFTab = thetheme.GetFTab


TheFields = theFTab.GetFields
    TheField = theFTab.FindField("ID").AsString
        
    If ( (TheField = "nil") Or (TheField = "Shape" ) ) Then
      Return MsgBox.Info("You must add a field called ID to your theme.","Error!")
      exit
    End

theview.SetEditableTheme(thetheme)


if (thetheme <> nil)  then
  
 def = av.GetProject.MakeFileName("theme", "shp")
 def = FileDialog.Put(def, "*.shp", "Save Unionized Theme as...")
    
 if (def = NIL) then return nil end


 newTheme = thetheme.SaveEditsAs(def)
 
 if ((newTheme <> nil) and (newTheme.GetFTab.HasError.Not)) then

   theView.SetEditableTheme(nil)
   theView.AddTheme(newTheme)
   'theView.SetEditableTheme(newTheme)
   
   thetheme.SetVisible(False)
   newTheme.SetVisible(True)
 
 else
   MsgBox.Info("Unable to Save Edits As "
                + def.AsString  +
                ", please try another file name", "")  
 end
 
end

newtheme.select

For Each ATheme in TheView.GetActiveThemes
  If (ATheme.IsActive) Then
    thmSource = TheView.FindTheme(newtheme.AsString)
    theFTab = thmSource.GetFTab

    If ((thmSource.CanEdit.Not) Or (theView.GetEditableTheme <> nil) ) Then
      Msgbox.Info("Some file open already, or can't open","Skipping..")
    End

    'TheFields = theFTab.GetFields
    'TheField = theFTab.FindField("ID").AsString
        
    'If ( (TheField = "nil") Or (TheField = "Shape" ) ) Then
      'Return MsgBox.Info("There is no ID field in the theme.","Error!")
    'End

    If (theFTab.FindField(TheField).IsTypeString) Then
      FieldIsString = True
    Else
      FieldIsString = False
    End

    summFTab = theFTab.Summarize("c:\awtemp.dbf".AsFileName,
        dBase,theFTab.FindField(TheField),{},{})

    bm = theFTab.GetSelection
        
    For Each Record in summFTab
      If (summFTab.ReturnValue(summFTab.FindField("Count"),Record ) > 1) Then
        If (theFTab.IsEditable.Not) Then ' no theme being currently edited, so..
          theView.SetEditableTheme(thmSource)
        End
        
        Source = summFTab.ReturnValue(summFTab.FindField(TheField),Record )
        
        If (FieldIsString) Then
          expr = "([" + TheField + "] = " + Source.Quote + ")"
        Else
          expr = "([" + TheField + "] = " + Source.AsString + ")"
        End      
        
        theFTab.Query(expr , bm , #VTab_SELTYPE_NEW)
        theFTab.UpdateSelection
        
        thmSource.UnionSelected
        
        pc = summFTab.ReturnValue(summFTab.FindField(TheField),Record)
        no = summFTab.ReturnValue(summFTab.FindField("Count"),Record)
      End ' count is more than 1
    End ' each record

    If (theFTab.Iseditable) Then
      thmSource.StopEditing(true)
    End
    
    If (File.CanDelete("c:\awtemp.dbf".AsFilename)) Then
      summFTab = nil
      av.PurgeObjects
      File.Delete("c:\awtemp.dbf".AsFileName)
    End
  End ' if active
End ' each theme






