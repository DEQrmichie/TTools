'*******************************************************
'********************VERSION 7.0************************
'*******************************************************
'-------------------------------------------------------
' later modified by Matt Boyd and Brian Kasper (Oregon DEQ),September 2002
'-------------------------------------------------------
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'START INITIAL SETUP
'''''''''''''''''''''''''''''''''''''''''''''''''''''''''' 
av.finddialog("FLIR").close

'Get the active document, which should be a view.  Bail if not a view:
theView=av.GetActiveDoc
if (theView.Is(View).Not) then
  MsgBox.Error("This script must be run from a view. Exiting","Error")
  return nil
end

'Build a list of fthemes from the theme list.  The user will be asked to select from the list.
ppthms=List.Make
for each t in theView.GetThemes
  if (t.Is(Ftheme)) then
    shapetype = t.GetFtab.FindField("Shape").GetType
    if (shapetype = #FIELD_SHAPEPOINT) then
      ppthms.Add(t)
    end
  end
end

'If < 1 themes are Polyline or polygon fthemes, bail out.
if (ppthms.Count < 1) then
  System.Beep
  MsgBox.Error("There must be at least one point feature theme in the View to proceed!  Exiting.","Error")
  exit
end             
theView = av.GetActiveDoc
'must be global to work in Calc exp below
_theProjection = theView.GetProjection 
project_flag = _theProjection.IsNull.Not  'true if projected
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'END OF THE INITIAL SETUP
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'DISPLAY LISTBOX FOR POINT DATA AND TIR DATA
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''   
'Ask the user which themes contain point data:
  theTheme = Msgbox.List(ppthms,"Select TTools point theme.","Sample TIR Data")
'Check to see if some themes were selected, bail if not:
  if (nil = theTheme) then
    msgbox.info("No point themes were selected...","Sample TIR Data")
    exit
  end
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''   
'Ask the user which themes contain TIR data:
  FLIRtheme = Msgbox.List(ppthms,"Select TIR point theme","Sample TIR Data")
'Check to see if some themes were selected, bail if not:
  if (nil = FLIRtheme) then
    msgbox.info("TIR theme was not selected...","Sample TIR Data")
    exit
  end
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''   
'Check if themes are point data
if (((theTheme.GetSrcName.GetSubName = "point") or 
    (FLIRTheme.GetSrcName.GetSubName = "point")).Not) then
  MsgBox.Info("Both themes must be point data","")
  exit
end  
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''   
'get the theme table and current edit state
theFTab = theTheme.GetFTab
theFields = theFTab.GetFields
edit_state = theFTab.IsEditable
FLIRFTab = FLIRTheme.GetFTab
FLIRFields = FLIRFTab.GetFields
FLIR_state = FLIRFTab.IsEditable
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''   
'make sure table is editable and that fields can be added
if (theFtab.CanEdit) then
  theFTab.SetEditable(true)
  if ((theFTab.CanAddFields).Not) then
    MsgBox.Info("Can't add fields to the table."+NL+"Check write permission.")
    exit
  end
else
  MsgBox.Info("Can't modify the feature table."+NL+"Check write permission.")
  exit
end
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''   
if (FLIRFtab.CanEdit) then
  FLIRFTab.SetEditable(true)
  if ((FLIRFTab.CanAddFields).Not) then
    MsgBox.Info("Can't add fields to the FLIR table."+NL+"Check write permission.")
    exit
  end
else
  MsgBox.Info("Can't modify the FLIR feature table."+NL+"Check write permission.")
  exit
end
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''   
'theFTab fields
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''   
'Check if fields exist named: Temp
T_exists = (theFTab.FindField("Temp") = NIL).Not
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''   
Blubber=0
if (T_exists) then 
  if (MsgBox.YesNo("Do you want to continue?",
  "The existing Temp field will be overwritten.", false)) then
    if (T_exists) then 
      theFTab.RemoveFields({theFTab.FindField("Temp")})
    end
    T = Field.Make ("Temp",#FIELD_DECIMAL,6,1)
    theFTab.AddFields({T})
  else
    exit
  end  'if (MsgBox...)
else
    T = Field.Make ("Temp",#FIELD_DECIMAL,6,1)
    theFTab.AddFields({T})
end  'if
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''   
'FLIRFTab fields
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''   
'Build a list of FLIR fields from the theme list.  The user will be asked to select from the list.
frthms=List.Make
for each t in FLIRFields
  frthms.Add(t)
end
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''   
'Ask the user which themes contain TIR data:
  FLIRfield = Msgbox.List(frthms,"Select the field from your TIR point theme that contains the data you want to sample."+nl+"(single click to toggle selection)","Query TIR Data")
'Check to see if some themes were selected, bail if not:
  if (nil = FLIRfield) then
    msgbox.info("TIR field was not selected...","Query TIR Data")
    exit
  end
  
'''''''''''''''''
'choose TIR Temperature Units
''''''''''''''''''

options = {"Fahrenheit","Celsius"}
FLIRunits = MsgBox.choiceAsString(options, "What are the existing temperature units in your TIR data?", "IMPORTANT:")
if (FLIRunits = nil) then
msgbox.info("You must make a selection.","")
exit
end


'**********************************************************************
theftab=thetheme.getftab
theshapefield=theftab.findfield("shape")
theshapename=theftab.returnvalue(theshapefield,0).getclass.getclassname

'-------------------------------------------------------------------------------------------
theProgressDialog = av.FindDialog ("ProgressMeter")
thePDBeginTime = theProgressDialog.FindByName("lblBeginTime")
thePDCurrentTime = theProgressDialog.FindByName("lblCurrentTime")
thePDRecordNumber = theProgressDialog.FindByName("lblRecordNumber")
thePDIndex = theProgressDialog.FindByName("lblIndex")
thePDTimeLeft = theProgressDialog.FindByName("lblTimeLeft")
thePDPercentDone = theProgressDialog.FindByName("lblPercentDone")
thePDProgressBar = theProgressDialog.FindByName("icnProgressLine")

' - BEGIN TIME ------------------------------------------------------------------------------
' Just set the date format.
Date.SetDefFormat ("MMMM d, h:m:s AMPM")
' Find the exact time this request is executed. I put this line in right before my script
' starts calculating things.
BeginTime = Date.Now
' Put the BeginTime value in to the dialog box.
thePDBeginTime.SetLabel("Began Job:"++BeginTime.AsString)

''''''''''''''''''''''''''''''''''''''''''''''''''''''''''   
'Associate TIR data with point data
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''   
theProgressDialog.Open

TotRec=0
For Each Rec in theFTab
  TotRec=TotRec+1
End
FTotRec=0
For Each FRec in FLIRFTab
  FTotRec=FTotRec+1
End

thepolycount=totrec

theFieldX=theFTab.FindField("Xcoord")
theFieldY=theFTab.FindField("Ycoord")

'=====================

' - CURRENT TIME ----------------------------------------------------------------------------
' Finds the current time and formats it, then writes current time to the label.
thePDCurrentTime.SetLabel(date.now.setFormat("h:m:s AMPM").AsString)

'- RECORD NUMBER --------------------------------------------------------------------------- 
thePDRecordNumber.SetLabel ("Working on "+theshapename+" # 1 of [some number]")
'- INDEX -----------------------------------------------------------------------------------
thePDIndex.SetLabel ("Sampling TIR data...")
'- PERCENT DONE ----------------------------------------------------------------------------
thePDPercentDone.SetLabel ("00.0%")

'====================


av.ShowMsg("Sampling TIR Data...")
av.ShowStopButton
  theFieldP=theFTab.FindField("Shape")
  theFieldT=theFTab.FindField("Temp")
  FLIRFieldP=FLIRFTab.FindField("Shape")
  FLIRFieldT=FLIRFTab.FindField(FLIRField.getname)
For Each Rec in theFTab
  Duh=Rec+1
  more = av.SetStatus(100*Rec/(TotRec-1))
  if (not more) then
    av.showmsg("TIR Sampling Stopped...")
    Msgbox.info("TIR Sampling Stopped.","Status:")
    av.ClearStatus
    av.ClearMsg
    theFtab.Flush
    theFtab.Refresh 
    theFTab.SetEditable(False)
    exit
  end
  
'---------------------Progress bar stuff------------------------------------------

       ' -- CALCULATE AND ASSIGN VALUES TO "thePDRecordNumber" -------------------------------------
       theStepNumber = rec + 1
       theRecordCount = theFTab.GetNumRecords-1
       thePDRecordNumber.SetLabel ("Working on TTools Node # "+(rec).AsString++"of"++theRecordCount.AsString)

       ' -- CALCULATE AND ASSIGN VALUES TO "thePDPercentDone" and the Graphic Bar Size -------------
       thePercentDone = (rec/theRecordCount)*100
       thePercentDone.SetFormat ("dd.d")      
       thePDPercentDone.SetLabel (""+thePercentDone.AsString+"%")
 
       ' -- CALCULATE AND ASSIGN VALUES TO "thePDIndex" --------------------------------------------
       'thePDIndex.SetLabel ("Sampling TIR Data...")
         
       ' -- CALCULATE AND ASSIGN VALUES TO CURRENT TIME ("thePDCurrentTime") -------------------       
       thePDCurrentTime.SetLabel(date.now.setFormat("h:m:s AMPM").AsString)

       theProgressDialog.Activate

'----------------------------------------------------------------------------------------------------

    Dist=10000000000
    For Each FlirRec in FLIRFtab
      If (Blubber=0) then
          thePoint=theFTab.ReturnValue(theFieldP,Rec) 
          FLIRPoint=FLIRFTab.ReturnValue(FLIRFieldP,FlirRec) 
          theDist=thePoint.Distance(FLIRPoint)
          If (theDist<Dist) then
            Count=FlirRec
            Dist=theDist
            theTemp=FLIRFTab.returnvalue(FLIRFieldT,Count)
            
            if (flirunits="fahrenheit") then
                theftab.setvaluenumber(thefieldT,Rec,(theTemp-32)*5/9)   
            else
                theftab.setvaluenumber(thefieldT,Rec,theTemp)
            end             
            
          else
            FlirRec=FTotRec
          End
        End  
    End  'for 

End  'For

   av.ClearMsg
   Msgbox.info("TIR data sampling is complete!  Units are Celsius.","Status")
    '------------------
    'Reset arcview
    '------------------
    theFtab.Flush
    theFtab.Refresh 
    theFTab.SetEditable(False)
    FLIRFTab.SetEditable(False)
    av.purgeobjects
    av.ClearStatus
    av.ClearMsg
    thePDPercentDone.SetLabel ("100%")

